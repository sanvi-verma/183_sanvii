pipeline {
  agent any

  options {
    skipStagesAfterUnstable()
    timestamps()
  }

  stages {
    stage('Checkout') {
      steps {
        // If using a Git repo, uncomment and edit the next line:
        // git branch: 'main', url: 'https://github.com/example/your-repo.git'
        echo 'Using workspace copy for demo...'
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker version'
        script {
          docker.build("myapp:${env.BUILD_NUMBER}", "app")
        }
      }
    }

    stage('Test') {
      steps {
        sh 'echo "âœ… Running tests (placeholder)"'
      }
    }

    stage('Deploy') {
      steps {
        script {
          sh 'docker ps -q --filter name=myapp | grep -q . && docker stop myapp && docker rm myapp || true'
          sh 'docker run -d --name myapp -p 5000:5000 myapp:${BUILD_NUMBER}'
        }
      }
    }
  }

  post {
    always {
      echo "Build #${env.BUILD_NUMBER} finished with status: ${currentBuild.currentResult}"
    }
  }
}
